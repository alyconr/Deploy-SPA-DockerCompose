server {
    listen 80;
    listen [::]:80;
    server_name www.example.com;
    return 301 https://$host$request_uri; # Automatically redirect to HTTPS
    # Omitted SSL-related settings for port 80 since it's just for redirection
}

server {
    listen 443 ssl;
    http2 on;
    listen [::]:443 ssl;
    server_name www.example.com;
    
    ssl_certificate /var/certificates/nginx.crt; 
    ssl_certificate_key /var/certificates/nginx.key;
    ssl_dhparam /var/certificates/dhparam.pem;
    ssl_protocols TLSv1.3;
    ssl_prefer_server_ciphers off; # Better security practice
    ssl_ciphers "TLS_AES_256_GCM_SHA384:TLS_AES_128_GCM_SHA256:TLS_CHACHA20_POLY1305_SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-SHA256:DHE-RSA-AES128-SHA256";
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload";
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";

    # Default location for other requests
    location / {
        
        proxy_pass http://10.0.2.239:5000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;

    }
   
}

